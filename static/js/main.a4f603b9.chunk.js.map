{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","seachrField","target","value","state","searchField","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCDbC,EAAW,SAACR,GAAD,OAEpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIC,KAAK,SACLF,YAAaA,EACbX,UAAU,SACVc,SAAUF,MCwCHG,E,kDA1Cb,aAAc,IAAD,8BACX,gBAkBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAhBpC,EAAKC,MAAQ,CACXb,SAAS,GACTc,YAAa,IANJ,E,qDAab,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,SAASmB,S,oBAO3C,WACE,MAAgCC,KAAKP,MAA9Bb,EAAP,EAAOA,SAAUc,EAAjB,EAAiBA,YACXO,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC5CA,EAAQE,KAAK0B,cAAcC,SAASV,EAAYW,wBAEpD,OACE,sBAAKjC,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,W,GArCRK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a4f603b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=>(\r\n    <div className=\"card-container\">\r\n        <img alt=\"mosnter\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component.jsx';\r\n\r\n\r\n\r\nexport const CardList = (props)=>(\r\n\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => \r\n            <Card key={monster.id} monster={monster}/>)}\r\n    </div>\r\n);","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        className=\"search\"\r\n        onChange={handleChange}\r\n    />\r\n);\r\n\r\n","import React, { Component } from \"react\";\nimport './App.css';\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n\n    this.state = {\n      monsters:[],\n      searchField: ''\n    }\n\n    //this.handleChange=this.handleChange.bind(this);\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n\n  handleChange = (e)=>{\n    this.setState({seachrField:e.target.value});\n  }\n\nrender(){\n  const {monsters, searchField} = this.state;\n  const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n  return (\n    <div className=\"App\">\n    <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder=\"Search monster\" \n        handleChange={this.handleChange} \n      />\n      <CardList monsters={filteredMonsters}/>  \n      \n    </div>\n  );\n}\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}